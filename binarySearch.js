let test = [1, 6, 7, 9, 10, 12, 13, 17, 18, 19, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 44, 47, 48, 49, 50, 51, 54, 59, 61, 63, 64, 65, 66, 68, 72, 73, 76, 77, 79, 81, 82, 84, 85, 86, 87, 88, 92, 94, 98, 101, 103, 107, 108, 110, 111, 112, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 134, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 151, 155, 157, 161, 162, 164, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 183, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 198, 199, 201, 202, 203, 204, 207, 210, 211, 212, 213, 214, 215, 216, 219, 221, 223, 224, 225, 231, 232, 233, 236, 238, 241, 242, 243, 250, 253, 254, 255, 256, 260, 261, 264, 269, 270, 271, 274, 276, 280, 288, 290, 293, 295, 300, 302, 303, 304, 308, 310, 311, 313, 314, 316, 318, 322, 325, 326, 328, 329, 330, 331, 332, 336, 339, 340, 341, 342, 343, 345, 349, 351, 352, 354, 357, 358, 359, 361, 363, 365, 366, 367, 368, 369, 370, 372, 374, 377, 378, 379, 380, 381, 384, 386, 392, 394, 395, 398, 399, 401, 403, 405, 408, 409, 411, 412, 415, 416, 417, 418, 419, 421, 424, 428, 430, 431, 432, 433, 434, 436, 438, 442, 443, 447, 449, 451, 452, 454, 455, 459, 460, 461, 462, 464, 465, 468, 471, 472, 473, 474, 477, 478, 483, 488, 489, 492, 494, 495, 496, 498, 500, 502, 503, 504, 505, 509, 510, 511, 513, 516, 517, 518, 519, 520, 522, 524, 526, 527, 528, 532, 533, 534, 538, 541, 542, 543, 544, 545, 546, 548, 550, 551, 553, 554, 555, 557, 558, 561, 562, 563, 564, 565, 567, 572, 577, 578, 579, 580, 594, 596, 601, 602, 607, 608, 610, 615, 622, 623, 624, 625, 628, 629, 631, 634, 635, 638, 639, 641, 643, 645, 646, 648, 649, 654, 656, 657, 662, 663, 664, 667, 669, 670, 673, 674, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 698, 701, 702, 704, 705, 708, 713, 719, 720, 721, 726, 727, 731, 732, 734, 737, 738, 740, 741, 743, 748, 749, 750, 751, 755, 756, 761, 762, 763, 764, 765, 768, 771, 776, 779, 780, 782, 787, 788, 792, 795, 796, 797, 801, 806, 808, 809, 810, 812, 813, 815, 818, 819, 824, 825, 826, 830, 831, 832, 834, 835, 837, 839, 841, 842, 844, 845, 847, 849, 850, 852, 853, 855, 856, 857, 860, 861, 862, 865, 866, 867, 868, 872, 874, 878, 880, 882, 883, 885, 887, 888, 889, 891, 892, 893, 894, 895, 899, 900, 901, 906, 918, 920, 921, 923, 927, 928, 934, 935, 937, 938, 939, 941, 943, 945, 946, 948, 949, 950, 952, 954, 957, 960, 966, 969, 970, 972, 973, 978, 980, 981, 982, 983, 986, 987, 988, 989, 990, 992, 993, 995, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1015, 1017, 1018, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1053, 1054, 1055, 1056, 1058, 1062, 1063, 1067, 1068, 1071, 1074, 1075, 1076, 1078, 1082, 1087, 1088, 1089, 1090, 1092, 1097, 1098, 1099, 1100, 1103, 1106, 1110, 1111, 1112, 1114, 1115, 1116, 1119, 1122, 1123, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1139, 1140, 1141, 1143, 1145, 1146, 1148, 1151, 1152, 1153, 1154, 1159, 1160, 1161, 1162, 1165, 1169, 1172, 1175, 1176, 1179, 1181, 1183, 1184, 1186, 1187, 1188, 1190, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1205, 1207, 1209, 1210, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1223, 1225, 1226, 1227, 1233, 1234, 1236, 1238, 1240, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1260, 1262, 1263, 1266, 1269, 1271, 1273, 1276, 1277, 1279, 1281, 1282, 1283, 1284, 1285, 1286, 1290, 1292, 1293, 1294, 1298, 1299, 1300, 1302, 1304, 1309, 1310, 1312, 1313, 1315, 1316, 1319, 1320, 1325, 1328, 1329, 1330, 1332, 1335, 1340, 1349, 1350, 1351, 1354, 1358, 1363, 1366, 1369, 1370, 1373, 1376, 1378, 1379, 1380, 1381, 1385, 1387, 1391, 1394, 1395, 1398, 1403, 1404, 1408, 1409, 1410, 1412, 1416, 1417, 1418, 1420, 1421, 1422, 1424, 1425, 1429, 1430, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1452, 1453, 1458, 1459, 1463, 1464, 1466, 1468, 1469, 1473, 1475, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1489, 1491, 1492, 1493, 1494, 1495, 1501, 1502, 1504, 1505, 1506, 1510, 1511, 1512, 1516, 1520, 1522, 1529, 1531, 1532, 1533, 1534, 1538, 1540, 1542, 1545, 1546, 1547, 1549, 1550, 1553, 1555, 1557, 1561, 1562, 1564, 1565, 1566, 1567, 1569, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1583, 1585, 1588, 1589, 1594, 1595, 1596, 1603, 1604, 1606, 1608, 1612, 1613, 1615, 1616, 1619, 1622, 1623, 1626, 1628, 1633, 1635, 1641, 1642, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1654, 1657, 1658, 1664, 1666, 1667, 1671, 1672, 1674, 1675, 1677, 1678, 1680, 1681, 1687, 1689, 1690, 1691, 1692, 1693, 1695, 1702, 1704, 1705, 1709, 1710, 1712, 1716, 1720, 1725, 1727, 1729, 1730, 1733, 1734, 1736, 1740, 1741, 1743, 1749, 1750, 1754, 1755, 1756, 1757, 1758, 1760, 1762, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1777, 1779, 1780, 1783, 1787, 1793, 1795, 1798, 1802, 1803, 1806, 1808, 1809, 1814, 1817, 1820, 1821, 1822, 1823, 1825, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1836, 1837, 1838, 1840, 1841, 1842, 1851, 1856, 1859, 1862, 1863, 1864, 1865, 1871, 1873, 1875, 1876, 1878, 1879, 1880, 1882, 1884, 1885, 1886, 1887, 1888, 1891, 1893, 1897, 1898, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1913, 1914, 1924, 1925, 1926, 1929, 1932, 1933, 1934, 1935, 1936, 1938, 1940, 1944, 1948, 1949, 1953, 1955, 1957, 1958, 1961, 1965, 1969, 1976, 1977, 1978, 1979, 1980, 1981, 1984, 1985, 1986, 1988, 1992, 1994, 1995, 1997, 2000]
const random = 2000;
console.log(`Random number: ${random}`);

const binarySearch = (target, array) => {
  let min = 0;
  let max = array.length - 1;
  let mid = Math.floor(array.length);
  let resolved = false;
  let output;

  while (!resolved) {
    
    if (array[mid] == target) {
      console.log(`Found ${target} at position ${mid}, proof: ${array[mid]}.`);
      resolved = true;
      output = true;
    }
    
    if (array[mid] < target ){
      min = mid + 1
      mid = Math.floor((min + max) / 2);
    } else {
      max = mid - 1;
      mid = Math.floor((min + max) / 2);
    }

    if (min > max && resolved == false) {
      resolved = true;
      console.log(`${target} is not in the list.`)
      output = false;
    }
  }
  return output;
};

binarySearch(random, test);
